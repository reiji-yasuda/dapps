{"ast":null,"code":"//contextフォルダではそれぞれのコンポーネントに直接アクセスできるような処理が書かれている\n\nimport { ethers } from \"ethers\"; //ether.jsというライブラリ→インストールする必要がある\nimport { contractABI, contractAddress } from \"../utils/connect\";\n\n//スマートコントラクトと連携する作業\n//スマートコントラクトの取得\nconst getSmartContract = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum); //公式ドキュメントに用意されている\n  const signer = provider.getSigner();\n  const transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\n};","map":{"version":3,"names":["ethers","contractABI","contractAddress","getSmartContract","provider","providers","Web3Provider","window","ethereum","signer","getSigner","transactionContract","Contract"],"sources":["/Users/reijiyasuda/dev/dapps/udemy-blockchain-app/client/src/context/TranssactionContext.js"],"sourcesContent":["//contextフォルダではそれぞれのコンポーネントに直接アクセスできるような処理が書かれている\n\nimport { ethers } from \"ethers\";//ether.jsというライブラリ→インストールする必要がある\nimport {contractABI, contractAddress} from \"../utils/connect\";\n\n//スマートコントラクトと連携する作業\n//スマートコントラクトの取得\nconst getSmartContract=()=>{\n    const provider = new ethers.providers.Web3Provider(window.ethereum);//公式ドキュメントに用意されている\n    const signer = provider.getSigner();\n    const transactionContract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        signer\n    );\n};"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,QAAQ,CAAC;AAChC,SAAQC,WAAW,EAAEC,eAAe,QAAO,kBAAkB;;AAE7D;AACA;AACA,MAAMC,gBAAgB,GAACA,CAAA,KAAI;EACvB,MAAMC,QAAQ,GAAG,IAAIJ,MAAM,CAACK,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC;EACpE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAAC,CAAC;EACnC,MAAMC,mBAAmB,GAAG,IAAIX,MAAM,CAACY,QAAQ,CAC3CV,eAAe,EACfD,WAAW,EACXQ,MACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}