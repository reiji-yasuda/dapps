{"ast":null,"code":"var _jsxFileName = \"/Users/reijiyasuda/dev/dapps/udemy-blockchain-app/client/src/context/TransactionContext.js\";\n//contextフォルダではそれぞれのコンポーネントに直接アクセスできるような処理が書かれている\n\nimport { ethers } from \"ethers\"; //ether.jsというライブラリ→インストールする必要がある\nimport { contractABI, contractAddress } from \"../utils/connect\";\nimport { createContext } from \"react\";\n\n//ホームページのボタンな度に連携するためのcontextを書いていく\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext(); //createContext関数をreactから呼び出す\n//スマートコントラクトと連携する作業\n//スマートコントラクトの取得\nconst getSmartContract = () => {\n  const provider = new ethers.providers.web3Provider(window.ethereum); //公式ドキュメントに用意されている\n  const signer = provider.getSigner();\n  const transactionContract = new ethers.Contract(contractAddress, contractABI, signer);\n  return transactionContract;\n};\nexport const TransactionProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      name: \"shincode\"\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)\n  //childrenはいつでも呼び出すことができる\n  ;\n};\n_c = TransactionProvider;\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"names":["ethers","contractABI","contractAddress","createContext","jsxDEV","_jsxDEV","TransactionContext","getSmartContract","provider","providers","web3Provider","window","ethereum","signer","getSigner","transactionContract","Contract","TransactionProvider","_ref","children","Provider","value","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reijiyasuda/dev/dapps/udemy-blockchain-app/client/src/context/TransactionContext.js"],"sourcesContent":["//contextフォルダではそれぞれのコンポーネントに直接アクセスできるような処理が書かれている\n\nimport { ethers } from \"ethers\";//ether.jsというライブラリ→インストールする必要がある\nimport {contractABI, contractAddress} from \"../utils/connect\";\nimport { createContext } from \"react\";\n\n//ホームページのボタンな度に連携するためのcontextを書いていく\nexport const TransactionContext = createContext();//createContext関数をreactから呼び出す\n//スマートコントラクトと連携する作業\n//スマートコントラクトの取得\nconst getSmartContract=()=>{\n    const provider = new ethers.providers.web3Provider(window.ethereum);//公式ドキュメントに用意されている\n    const signer = provider.getSigner();\n    const transactionContract = new ethers.Contract(\n        contractAddress,\n        contractABI,\n        signer\n    );\n    return transactionContract;\n\n};\n\nexport const TransactionProvider =({children})=>{\n\n\n    return(\n        <TransactionContext.Provider value={{name: \"shincode\"}}>\n            {children}\n        </TransactionContext.Provider>\n        //childrenはいつでも呼び出すことができる\n    );\n};"],"mappings":";AAAA;;AAEA,SAASA,MAAM,QAAQ,QAAQ,CAAC;AAChC,SAAQC,WAAW,EAAEC,eAAe,QAAO,kBAAkB;AAC7D,SAASC,aAAa,QAAQ,OAAO;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,kBAAkB,gBAAGH,aAAa,CAAC,CAAC,CAAC;AAClD;AACA;AACA,MAAMI,gBAAgB,GAACA,CAAA,KAAI;EACvB,MAAMC,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC;EACpE,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAAC,CAAC;EACnC,MAAMC,mBAAmB,GAAG,IAAIf,MAAM,CAACgB,QAAQ,CAC3Cd,eAAe,EACfD,WAAW,EACXY,MACJ,CAAC;EACD,OAAOE,mBAAmB;AAE9B,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAEC,IAAA,IAAc;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAD,IAAA;EAGzC,oBACIb,OAAA,CAACC,kBAAkB,CAACc,QAAQ;IAACC,KAAK,EAAE;MAACC,IAAI,EAAE;IAAU,CAAE;IAAAH,QAAA,EAClDA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB;EAC7B;EAAA;AAER,CAAC;AAACC,EAAA,GATWV,mBAAmB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}